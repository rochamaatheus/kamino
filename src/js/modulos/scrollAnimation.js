export function setupScrollAnimation(selector,responsive=!0){const element=document.querySelector(selector);if(!element){console.error(`Elemento com seletor "${selector}" nÃ£o encontrado.`);return}
let observer=null;let activated=!1;const isWideViewport=()=>window.innerWidth>768;const getThreshold=()=>(isWideViewport()?0.4:0.1);const initAnimation=()=>{if((responsive&&!isWideViewport())||observer)return;observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting&&!activated){activated=!0;entry.target.style.transform='translateX(0)';entry.target.classList.add('anime--active');observer.disconnect()}})},{threshold:getThreshold()},);observer.observe(element)};const destroyAnimation=()=>{if(observer){observer.disconnect();observer=null}
element.classList.remove('anime--active');element.style.transform='translateX(0)';activated=!1};let resizeTimeout;const handleResize=()=>{clearTimeout(resizeTimeout);resizeTimeout=setTimeout(()=>{if(responsive){if(isWideViewport()){initAnimation()}else{destroyAnimation()}}else{initAnimation()}},100)};window.addEventListener('resize',handleResize);handleResize();return()=>{destroyAnimation();window.removeEventListener('resize',handleResize)}}